{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","useState","weather","setWeather","city","setCity","url","process","fetchAPI","a","fetch","res","json","data","useEffect","LIST","list","CITY","sunriseData","sunrise","Date","toLocaleTimeString","sunsetData","sunset","time","moment","calendar","className","class","id","type","placeholder","onClick","e","value","document","querySelector","name","country","main","style","width","src","icon","alt","temp","toFixed","description","toUpperCase","slice","feels_like","temp_max","temp_min","map","forecast","add","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.229bd558.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport moment from 'moment';\n\nfunction App() {\n  // Setup useState\n  const [weather, setWeather] = useState({});\n  const [city, setCity] = useState('Birmingham');\n\n  // Link apiKey to .env file\n  const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n  // Create url to endpoint\n  // https://openweathermap.org/forecast5\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=imperial&cnt=40&appid=${apiKey}`;\n\n  // Setup fetch call\n  const fetchAPI = async () => {\n    let res = await fetch(url);\n    let data = await res.json();\n    setWeather(data);\n  };\n\n  useEffect(() => {\n    fetchAPI(); // Returns promise\n    return () => {}; // Cleanup function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [city]); // Dependency array\n\n  // Update city state onClick\n  const handleClick = (e) => {\n    const value = document.querySelector('#search-city').value;\n    setCity(`${value}`);\n  };\n\n  // Setup weather inner objects\n  const LIST = weather.list;\n  const CITY = weather.city;\n\n  // Setup sunrise\n  const sunriseData = weather.city && CITY.sunrise;\n  const sunriseDate = new Date(sunriseData * 1000);\n  const sunrise = sunriseDate.toLocaleTimeString();\n\n  // Setup sunset\n  const sunsetData = weather.city && CITY.sunset;\n  const sunsetDate = new Date(sunsetData * 1000);\n  const sunset = sunsetDate.toLocaleTimeString();\n\n  // Number of future forecast to display - Necessary due to how the API is setup\n  const numOfFutureForecasts = [1, 2, 3, 4, 5, 6, 7, 8];\n\n  // Current time on page load\n  const time = moment().calendar();\n\n  return (\n    <Fragment>\n\n      <div className='current-forecast my-4 mx-4'>\n\n        <div class='input-group mb-3 form'>\n          <input\n            id='search-city'\n            type='text'\n            class='form-control text-center'\n            placeholder='Search by City'\n          />\n          <div class='input-group-append'>\n            <button\n              class='btn btn-primary'\n              type='button'\n              id='button-addon2'\n              onClick={handleClick}>\n              Search\n            </button>\n          </div>\n        </div>\n\n        {CITY && (\n          <Fragment>\n            <h1>\n              {CITY.name ? `${CITY.name}, ${CITY.country}` : 'Opps! Try again'}\n            </h1>\n            <Fragment>\n              {LIST[0].main && (\n                <Fragment>\n                  <div class='card m-3 text-center' style={{ width: '18rem' }}>\n                    <img\n                      src={`https://openweathermap.org/img/wn/${LIST[0].weather[0].icon}@2x.png`}\n                      alt='icon'\n                      style={{ width: '8rem' }}\n                      className='img-fluid mx-auto d-block'\n                    />\n                    <div class='card-body text-center'>\n                      <h5 class='card-title'>\n                        {LIST[0].main.temp.toFixed(0)} F\n                      </h5>\n                      <p class='card-text'>\n                        {LIST[0].weather[0].description.toUpperCase()[0]}\n                        {LIST[0].weather[0].description.slice(1)}\n                      </p>\n                      <p>As of {time}</p>\n                    </div>\n                    <ul class='list-group list-group-flush'>\n                      <li class='list-group-item'>\n                        Feels like {LIST[0].main.feels_like.toFixed(0)} F\n                      </li>\n                      <li class='list-group-item'>\n                        <span className='mr-2'>\n                          High: {LIST[0].main.temp_max.toFixed(0)} F\n                        </span>\n                        <span className='ml-2'>\n                          Low: {LIST[0].main.temp_min.toFixed(0)} F\n                        </span>\n                      </li>\n                      <li class='list-group-item'>\n                        <span className='text-muted small mr-1'>\n                          Sunrise: {sunrise}\n                        </span>\n                        <span className='text-muted small'>\n                          Sunset: {sunset}\n                        </span>\n                      </li>\n                    </ul>\n                  </div>\n                </Fragment>\n              )}\n            </Fragment>\n          </Fragment>\n        )}\n\n      </div>\n\n      <h2 className='future-forecast'>Extended Forecast</h2>\n      <div className='future-forecast'>\n        {LIST &&\n          numOfFutureForecasts.map((forecast) => {\n            return (\n              <Fragment>\n                {LIST[forecast].main && (\n                  <div className='future-forecast'>\n                    <div\n                      className='card m-3 future-forecast'\n                      style={{ width: '12.5rem' }}>\n                      <p>\n                        {forecast === 1\n                          ? moment().add(3, 'hours').calendar()\n                          : forecast === 2\n                          ? moment().add(6, 'hours').calendar()\n                          : forecast === 3\n                          ? moment().add(9, 'hours').calendar()\n                          : forecast === 4\n                          ? moment().add(12, 'hours').calendar()\n                          : forecast === 5\n                          ? moment().add(15, 'hours').calendar()\n                          : forecast === 6\n                          ? moment().add(18, 'hours').calendar()\n                          : forecast === 7\n                          ? moment().add(21, 'hours').calendar()\n                          : forecast === 8\n                          ? moment().add(24, 'hours').calendar()\n                          : forecast === 9\n                          ? moment().add(25, 'hours').calendar()\n                          : forecast === 10\n                          ? moment().add(28, 'hours').calendar()\n                          : forecast === 11\n                          ? moment().add(31, 'hours').calendar()\n                          : forecast === 12\n                          ? moment().add(34, 'hours').calendar()\n                          : null}\n                      </p>\n                      <img\n                        src={`https://openweathermap.org/img/wn/${LIST[forecast].weather[0].icon}@2x.png`}\n                        alt='icon'\n                        className='icon'\n                        style={{ width: '7rem' }}\n                      />\n                      <div class='card-body'>\n                        <h5 class='card-title text-center'>\n                          {LIST[forecast].main.temp.toFixed(0)} F\n                        </h5>\n                        <p class='card-text'>\n                          {LIST[forecast].weather[0].description.toUpperCase()[0]}\n                          {LIST[forecast].weather[0].description.slice(1)}\n                        </p>\n                      </div>\n                      <ul class='list-group list-group-flush'>\n                        <li class='list-group-item small'>\n                          <p className='mr-2'>\n                            High: {LIST[forecast].main.temp_max.toFixed(0)} F\n                          </p>\n                          <p className='ml-2'>\n                            Low: {LIST[forecast].main.temp_min.toFixed(0)} F\n                          </p>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                )}\n              </Fragment>\n            );\n          })}\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}